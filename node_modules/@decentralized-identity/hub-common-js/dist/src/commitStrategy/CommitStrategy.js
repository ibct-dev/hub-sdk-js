"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CommitOperation_1 = require("../commits/CommitOperation");
/**
 * Generic interface to add commit strategy algorithm support
 */
var CommitStrategy = /** @class */ (function () {
    function CommitStrategy() {
    }
    /**
     * Filters a series of commits given an object id and commit strategy to match against
     * @param objectId Object ID all commits must be for
     * @param commitStrategy Commit strategy all commits must use
     * @param commits Commits to filter
     * @returns filtered commits
     */
    CommitStrategy.prototype.filterCommits = function (objectId, commitStrategy, commits) {
        return commits.filter(function (commit) {
            var headers = commit.getProtectedHeaders();
            if (headers.commit_strategy !== commitStrategy) {
                return false;
            }
            // filter updates and deletes on object ids (a required field)
            if (headers.operation !== CommitOperation_1.default.Create && headers.object_id !== objectId) {
                return false;
            }
            var unprotectedHeaders = commit.getHeaders();
            // filter creates on revision == object id (a necessary condition)
            if (headers.operation === CommitOperation_1.default.Create && unprotectedHeaders.rev && unprotectedHeaders.rev !== objectId) {
                return false;
            }
            return true;
        });
    };
    return CommitStrategy;
}());
exports.default = CommitStrategy;
//# sourceMappingURL=CommitStrategy.js.map