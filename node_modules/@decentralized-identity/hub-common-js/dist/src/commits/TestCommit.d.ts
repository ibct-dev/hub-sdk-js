import ICommit from './ICommit';
import ICommitUnprotectedHeaders from './ICommitUnprotectedHeaders';
import ICommitProtectedHeaders from './ICommitProtectedHeaders';
/**
 * Simple Commit implementation to be used in unit tests
 */
export default class TestCommit implements ICommit {
    /** unprotected headers */
    private unprotected;
    /** protected headers */
    private protected;
    /** payload */
    private payload;
    /**
     * Constructs a new test commit. Will contruct values if not passed
     * @param options Optional values to set in the commit
     */
    constructor(options?: {
        /** Unprotected header values */
        unprotected?: ICommitUnprotectedHeaders;
        /** Protected header values */
        protected?: Partial<ICommitProtectedHeaders>;
        /** Payload of the commit */
        payload?: any;
    });
    /**
     * Generates a random string
     * @param prefix prefix to add to the string
     */
    private getHash;
    getHeaders(): ICommitProtectedHeaders & ICommitUnprotectedHeaders;
    getProtectedHeaders(): Partial<ICommitProtectedHeaders>;
    getPayload(): any;
}
